name: Update Articles

on:
  schedule:
  - cron:  '*/1 * * * *'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Setup Python Version
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install beautifulsoup4
          pip install markdownify

      - name: execute script
        run: python ./scripts/update-episodes.py
      - name: setup git config
        run: |
          git config --global user.name 'arickert'
          git config --global user.email 'andysrickert@gmail.com'
      - name: commit
        run: |
          git add --all
          git commit -am "Created and updated archive files." || echo "No changes to commit."
          git push
      - name: Setup Ruby
        uses: ruby/setup-ruby@55283cc23133118229fd3f97f9336ee23a179fcf # v1.146.0
        with:
          ruby-version: '3.1' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Build Tina
        run: yarn install --frozen-lock && yarn tinacms build && bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
            TINA_PUBLIC_CLIENT_ID: ${{ secrets.TINA_PUBLIC_CLIENT_ID }}
            TINA_TOKEN: ${{ secrets.TINA_TOKEN }}
            TINA_SEARCH: ${{ secrets.TINA_SEARCH }}
            JEKYLL_ENV: production
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3
    permissions:
      id-token: write
      contents: write

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      id-token: write
      pages: write

